#define BOTON 7
#define ROJO 6
#define AMARILLO 5
#define VERDE 4

int estado = 0;  // 0 = Verde, 1 = Amarillo, 2 = Rojo
unsigned long tiempoEstado = 0;
bool botonPresionado = false;
bool esperandoCambio = false;

int ultimoEstadoBoton = LOW;

void setup() {
  pinMode(BOTON, INPUT);
  pinMode(ROJO, OUTPUT);
  pinMode(AMARILLO, OUTPUT);
  pinMode(VERDE, OUTPUT);
  Serial.begin(9600);
  tiempoEstado = millis();
}

void loop() {
  unsigned long ahora = millis();
  
  // Lectura de flanco de subida del botón
  int estadoActualBoton = digitalRead(BOTON);
  if (estadoActualBoton == HIGH && ultimoEstadoBoton == LOW) {
    Serial.println("Botón presionado");
    botonPresionado = true;
  }
  ultimoEstadoBoton = estadoActualBoton;

  switch (estado) {
    case 0: // VERDE
      digitalWrite(VERDE, HIGH);
      digitalWrite(AMARILLO, LOW);
      digitalWrite(ROJO, LOW);

      if (botonPresionado && !esperandoCambio) {
        // Si se presiona el botón, forzar cambio al amarillo pronto
        esperandoCambio = true;
        tiempoEstado = ahora;  // iniciar el tiempo para cambiar a amarillo antes de lo previsto
      }

      if (esperandoCambio || ahora - tiempoEstado >= 10000) {
        estado = 1;
        tiempoEstado = ahora;
      }
      break;

    case 1: // AMARILLO
      digitalWrite(VERDE, LOW);
      digitalWrite(AMARILLO, HIGH);
      digitalWrite(ROJO, LOW);

      if (ahora - tiempoEstado >= 3000) {
        estado = 2;
        tiempoEstado = ahora;
      }
      break;

    case 2: // ROJO
      digitalWrite(VERDE, LOW);
      digitalWrite(AMARILLO, LOW);
      digitalWrite(ROJO, HIGH);

      if (ahora - tiempoEstado >= 10000) {
        estado = 0;
        tiempoEstado = ahora;
        botonPresionado = false;
        esperandoCambio = false;
      }
      break;
  }
}